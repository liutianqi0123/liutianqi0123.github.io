<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LTQ的BLOG</title>
  
  <subtitle>游戏客户端开发</subtitle>
  <link href="https://liutianqi0123.github.io/atom.xml" rel="self"/>
  
  <link href="https://liutianqi0123.github.io/"/>
  <updated>2025-08-25T09:02:16.795Z</updated>
  <id>https://liutianqi0123.github.io/</id>
  
  <author>
    <name>LiuChuanFeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UObject系列-源码分析</title>
    <link href="https://liutianqi0123.github.io/2025/08/25/UObject%E7%B3%BB%E5%88%97/"/>
    <id>https://liutianqi0123.github.io/2025/08/25/UObject%E7%B3%BB%E5%88%97/</id>
    <published>2025-08-25T09:07:17.000Z</published>
    <updated>2025-08-25T09:02:16.795Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;UObject系列&quot;&gt;&lt;a href=&quot;#UObject系列&quot; class=&quot;headerlink&quot; title=&quot;UObject系列&quot;&gt;&lt;/a&gt;UObject系列&lt;/h1&gt;&lt;p&gt;UObject作为UE整个体系的基类，内包含了很多通用功能，包括：GC,Reflection,MetaData,Serialization,Editable,Class Default Object&lt;/p&gt;
&lt;p&gt;1.C++，C11，模板，宏，对象内存模型&lt;/p&gt;
&lt;p&gt;2.反射系统，编译原理，元数据，程序结构，&lt;/p&gt;
&lt;p&gt;3，多线程&lt;/p&gt;
&lt;p&gt;4，C++内存分配管理，内存分配管理的意义和技术。&lt;/p&gt;
&lt;p&gt;通过UHT工具已经分析得到了足够的类型元数据信息，下一步就是利用这个信息在程序内存中构建起类型系统结构，这个过程为注册。UE在内存中模拟构建的过程中，也需要经过-生成-收集-注册-链接几个阶段。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>UMG和Slate 源码分析和混合使用</title>
    <link href="https://liutianqi0123.github.io/2025/08/12/UE%20UMG%E5%92%8CSlate%20%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%92%8C%E6%B7%B7%E5%90%88%E4%BD%BF%E7%94%A8/"/>
    <id>https://liutianqi0123.github.io/2025/08/12/UE%20UMG%E5%92%8CSlate%20%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%92%8C%E6%B7%B7%E5%90%88%E4%BD%BF%E7%94%A8/</id>
    <published>2025-08-12T06:08:14.000Z</published>
    <updated>2025-08-11T17:36:14.022Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;UE-UMG和Slate-源码分析和混合使用&quot;&gt;&lt;a href=&quot;#UE-UMG和Slate-源码分析和混合使用&quot; class=&quot;headerlink&quot; title=&quot;UE UMG和Slate 源码分析和混合使用&quot;&gt;&lt;/a&gt;UE UMG和Slate 源码分析和混合使用&lt;/h1&gt;&lt;p&gt;一，Slate和UMG的区别&lt;/p&gt;
&lt;p&gt;slate：ue的底层UI框架。使用C++编写的，用于创建高度定制化的和性能优化的用户界面。所有的UMG控件最终都是基于Slate实现的。&lt;/p&gt;
&lt;p&gt;umg：是基于Slate的高级UI编辑工具。它提供了一个直观的拖放界面，让开发者可以在Editor中创建和设计UI，而不需要编写大量的C++代码。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
